Q1(a) 

cd /bin/
pwd

Results:

/usr/bin

I got /usr/bin.I did not get /bin/ as the
output because /bin/ is a symbolic link to
/usr/bin.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q1(b) 

I.ls ???????????????

Results:

dvd+rw-booktype*  gdmXnestchooser*  
glib-gettextize*  gnome-printinfo*  
gtkdoc-scangobj*  libIDL-config-2*  
libpng12-config*  tsoljds-tstripe*
dvd-ram-control*  glib-genmarshal*  
gnome-perfmeter*  gst-inspect-0.8*  
intltool-update*  libpng10-config*  
run-with-aspell*  tsoljdslabel-ui*

II.ls ?[z]*

Results:

7z*            bzcat*         bzegrep*
bzip2*         bzmore*        gzdiff*  
gzfgrep*       gzip*          gznew*
7za*           bzcmp*         bzfgrep*
bzip2recover*  gzcat*         gzegrep* 
gzforce*       gzless*        tzselect*
7zr*           bzdiff*        bzgrep*  
bzless*        gzcmp*         gzexe*   
gzgrep*        gzmore*

III.ls *[ij]

Results:

fmli*             gtkdoc-scangobj*
gtkdoc-scanobj*   idlj@
native2ascii@     tsoljdslabel-ui*  vi*  xdtosj@

IV.ls [A-Z]*

Results:

CC@             CCadmin@        
ControlPanel@   DBMirror.pl*
HtmlConverter@  X11@

V.ls [A-CE-LN-Z]*

Results:

CC@             CCadmin@        
ControlPanel@   HtmlConverter@
X11@

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 
Q2(a) 

cd $HOME
mkdir public_html 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(b)

cd public_html
ls -l public_html

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(C)

cd public_html

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(d)

cd public_html
touch abc

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(e)

cd ..

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(f)

chmod 300 public_html

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(g)

I can see information about abc when
executing ls public_html/abc because I have
the permission to read the file. I can not
see information about abc when executing
ls public_html because I changed the
permission to 300 which means I can not
read public_html.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q2(h)

The minimum that should be done for ls
public_html/abc and ls public_html to
behave the same way is to change the
permission of public_html to be able to be
read.

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Q3(a)

ls -a NOT DONE!!!!!!!!!!!!!!!!!!!!!!!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(b)

ls -a NOT DONE !!!!!!!!!!!!!!!!!!!!!!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(c)

finger

Results:

sjuarez3 Steve Ramon Juarez    pts/30           Wed 21:35  192-0-144-85.cpe.tek

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(d)

cd $HOME
cat > .plan

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(e)

chmod 644 .plan

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(f)

finger

Results:

sjuarez3 Steve Ramon Juarez    pts/30           Wed 21:35  192-0-144-85.cpe.tek

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(g)

chmod 600 .plan

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(h)

finger

Results:

sjuarez3 Steve Ramon Juarez    pts/30           Wed 21:35  192-0-144-85.cpe.tek
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q3(i)

No, I did not see a difference between
the (c), (f) and (h) outputs.This is so
because I did not change any information
about the local user (me).

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Q4(a)

cd $HOME
mkdir Working-Area

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(b)

cd Working-Area
mkdir Dir1
cd Dir1
cat > File1

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(c)

cd Dir1
mkdir Dir3
mkdir Dir4

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(d)
cd Dir3
cat > File3

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(e)

cd Dir4
cat > File4
cat > File5
cat > File6

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(f)

cd Working-Area
ln -s Dir1/Dir4 Dir2

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(g)

chmod 700 Working-Area

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(h)

chmod 750 Dir3

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(i)

chmod 755 File3

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q4(j)

chmod 511 File5

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Q5(a)

cd $HOME
cat > letter.txt

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(b)

cat letter.txt
01
02
03
04
05
06
07
08
09
10
11
12

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(c)

tail -3 ~/letter.txt displays the last three
lines of letter.txt.
Results:
10
11
12

tail +3 ~/letter.txt displays every line
except the first two of letter.txt.

Results:

03
04
05
06
07
08
09
10
11
12

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(d)

head -3 ~/letter.txt displays the first
three lines of letter.txt.

Results:

01
02
03

head +3 ~/letter.txt displays every line
until the last two.

Results:

+3: No such file or directory
==> /gaul/s1/student/2012/sjuarez3/letter.txt <==
01
02
03
04
05
06
07
08
09
10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(e)

who | tee ~/letter.txt | wc -l command
inputs the content of who and then splits
the output between standard output and
letter.txt. Then it outputs the number of
lines in who.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(f)

cal 11 1955

Results:

November 1955
 S  M Tu  W Th  F  S
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(g)

cat letter.txt opens letter.txt with cat
while cat < letter.txt opens letter.txt
using the shell.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q5(h)

echo cat displays cat while cat echo tries
to open a file named echo.

echo cat Results: cat

cat echo Results: cat: cannot open echo

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Q6(a)

cp -r courses/* sjuarez3

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q6(b)

cp -r ~/courses/* sjuarez3

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q6(c)


chmod 700 courses

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Q7(a)

The unix absolute pathname is the name of
the path from the current working directory
all the way up to the root. Example,
/gaul/s1/student/2012/sjuarez3/ or
~/sjuarez3 for short. Relative pathname
refers to the current working directory and
does not require slashes. Example, sjuarez3.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(b)

./ is the current working directory.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(c)

../ is the parent directory.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(d)

~/ is the current working directory.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(e)

rmdir abc_dir fails
because there are hidden files in the
directory, therefore it is not empty.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(f)

1.file1 and backup/file1.bak are directories.
2.cannot acess file1
3.a file named file1 already exists in backup/file.bak


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(g)

When I run this command I see the contents
of the file ~/.login displayed. I see this
because the command copies the file to my
console which essentialliy tells the console
to display the file.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q7(h)

(i) If umask shows 000 then the owner, group
and others can do everything.

(ii) If umask shows 002 then the owner and
group can do everything, but the others can
only read and execute.

From a security point of view, the umask
numbers 000 and 002 are not secure at all as
other people can access your files.